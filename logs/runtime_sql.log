[Thu, 12 Apr 18 07:32:05 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 07:32:05 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Thu, 12 Apr 18 07:32:05 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userMiddleName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`userEmail`, `user`.`userTeam`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 07:32:31 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Thu, 12 Apr 18 07:32:32 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Thu, 12 Apr 18 11:27:03 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:27:26 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:29:31 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 11:29:31 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Thu, 12 Apr 18 11:29:31 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userMiddleName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`userEmail`, `user`.`userTeam`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Thu, 12 Apr 18 11:29:34 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Thu, 12 Apr 18 11:29:35 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 11:29:35 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Thu, 12 Apr 18 11:29:35 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Thu, 12 Apr 18 11:29:35 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:29:54 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:30:00 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:30:14 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:32:04 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:32:20 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:32:42 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:37:38 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:37:56 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password 
[Thu, 12 Apr 18 11:42:11 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userid = :userId2: 
[Thu, 12 Apr 18 11:50:42 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:41 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`batch_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL LIMIT :APL0
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT COUNT(*) "rowcount" FROM `gpap`.`data_entry` WHERE `id` = ? AND `user_id` = ? AND `batch_id` = ? AND `task_id` = ?
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] INSERT INTO `gpap`.`data_entry` (`user_id`, `batch_id`, `task_id`, `started_at`, `ended_at`) VALUES (?, ?, ?, DEFAULT, DEFAULT)
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] UPDATE `gpap`.`batch` SET `entry_status` = ?, `verify_status` = null, `balance_status` = null, `is_exception` = ?, `created_by` = ? WHERE `id` = ? AND `zip_id` = ? AND `trans_type_id` = ?
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Thu, 12 Apr 18 12:00:44 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Thu, 12 Apr 18 12:00:46 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'image' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:46 +0000][DEBUG] DESCRIBE `gpap`.`image`
[Thu, 12 Apr 18 12:00:46 +0000][DEBUG] SELECT `image`.`id`, `image`.`path`, `image`.`type`, `image`.`zip_id`, `image`.`trans_type_id`, `image`.`batch_id`, `image`.`is_start`, `image`.`is_completed`, `image`.`created_by` FROM `gpap`.`image` WHERE `image`.`batch_id` = 2
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'pull_reason' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] DESCRIBE `gpap`.`pull_reason`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT `pull_reason`.`id`, `pull_reason`.`title`, `pull_reason`.`reason`, `pull_reason`.`level` FROM `gpap`.`pull_reason` WHERE `pull_reason`.`level` = 'Slip'
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'installment_months' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] DESCRIBE `gpap`.`installment_months`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT `installment_months`.`id`, `installment_months`.`title` FROM `gpap`.`installment_months`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'merchant_header' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] DESCRIBE `gpap`.`merchant_header`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT `merchant_header`.`id`, `merchant_header`.`data_entry_id`, `merchant_header`.`batch_id`, `merchant_header`.`merchant_number`, `merchant_header`.`merchant_name`, `merchant_header`.`currency_id`, `merchant_header`.`other_currency`, `merchant_header`.`dcn`, `merchant_header`.`deposit_date`, `merchant_header`.`deposit_amount`, `merchant_header`.`batch_pull_reason_id` FROM `gpap`.`merchant_header` WHERE `merchant_header`.`data_entry_id` = 4 AND `merchant_header`.`batch_id` = 2 LIMIT :APL0
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'other_exception' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] DESCRIBE `gpap`.`other_exception`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT `other_exception`.`id`, `other_exception`.`title` FROM `gpap`.`other_exception`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'pull_reason' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] DESCRIBE `gpap`.`pull_reason`
[Thu, 12 Apr 18 12:00:47 +0000][DEBUG] SELECT `pull_reason`.`id`, `pull_reason`.`title`, `pull_reason`.`reason`, `pull_reason`.`level` FROM `gpap`.`pull_reason` WHERE `pull_reason`.`level` = 'Batch'
[Thu, 12 Apr 18 12:07:15 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:07:57 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:08:13 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:08:37 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:09:31 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:09:31 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:09:31 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Thu, 12 Apr 18 12:28:35 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 12:28:35 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 12:28:35 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Thu, 12 Apr 18 12:37:06 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userID = ?
[Thu, 12 Apr 18 12:37:59 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 12:38:20 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 12:41:25 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 12:41:35 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 12:42:11 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 12:42:14 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 13:36:58 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 13:42:44 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Thu, 12 Apr 18 13:42:44 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Thu, 12 Apr 18 13:42:44 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Thu, 12 Apr 18 13:43:17 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 13:44:45 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 13:48:26 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 14:05:05 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Thu, 12 Apr 18 14:09:45 +0000][DEBUG] SELECT COUNT(userid) FROM `user` WHERE DATEDIFF(now(),userlastpasswordchange) = 0 AND userid = ?
[Fri, 13 Apr 18 06:03:24 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:24 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 06:03:24 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userMiddleName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`userEmail`, `user`.`userTeam`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:25 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:03:26 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 06:03:27 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:27 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 06:03:48 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:03:48 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 06:04:56 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:04:56 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 06:04:56 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userMiddleName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`userEmail`, `user`.`userTeam`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 06:05:29 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:05:29 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 06:05:29 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userMiddleName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`userEmail`, `user`.`userTeam`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 06:13:05 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:05 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 06:13:05 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:13:06 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:13:07 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :0 LIMIT :APL0
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 06:31:01 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`batch_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL LIMIT :APL0
[Fri, 13 Apr 18 06:31:02 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:02 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 06:31:02 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:31:02 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:02 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 06:31:02 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'image' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] DESCRIBE `gpap`.`image`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT `image`.`id`, `image`.`path`, `image`.`type`, `image`.`zip_id`, `image`.`trans_type_id`, `image`.`batch_id`, `image`.`is_start`, `image`.`is_completed`, `image`.`created_by` FROM `gpap`.`image` WHERE `image`.`batch_id` = 2
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'pull_reason' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] DESCRIBE `gpap`.`pull_reason`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT `pull_reason`.`id`, `pull_reason`.`title`, `pull_reason`.`reason`, `pull_reason`.`level` FROM `gpap`.`pull_reason` WHERE `pull_reason`.`level` = 'Batch'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'pull_reason' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] DESCRIBE `gpap`.`pull_reason`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT `pull_reason`.`id`, `pull_reason`.`title`, `pull_reason`.`reason`, `pull_reason`.`level` FROM `gpap`.`pull_reason` WHERE `pull_reason`.`level` = 'Slip'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'other_exception' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] DESCRIBE `gpap`.`other_exception`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT `other_exception`.`id`, `other_exception`.`title` FROM `gpap`.`other_exception`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'installment_months' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] DESCRIBE `gpap`.`installment_months`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT `installment_months`.`id`, `installment_months`.`title` FROM `gpap`.`installment_months`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'merchant_header' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] DESCRIBE `gpap`.`merchant_header`
[Fri, 13 Apr 18 06:31:04 +0000][DEBUG] SELECT `merchant_header`.`id`, `merchant_header`.`data_entry_id`, `merchant_header`.`batch_id`, `merchant_header`.`merchant_number`, `merchant_header`.`merchant_name`, `merchant_header`.`currency_id`, `merchant_header`.`other_currency`, `merchant_header`.`dcn`, `merchant_header`.`deposit_date`, `merchant_header`.`deposit_amount`, `merchant_header`.`batch_pull_reason_id` FROM `gpap`.`merchant_header` WHERE `merchant_header`.`data_entry_id` = 4 AND `merchant_header`.`batch_id` = 2 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:46:33 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 06:46:34 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 06:46:34 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 06:46:34 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :0 LIMIT :APL0
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`batch_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL LIMIT :APL0
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 07:02:10 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'image' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] DESCRIBE `gpap`.`image`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT `image`.`id`, `image`.`path`, `image`.`type`, `image`.`zip_id`, `image`.`trans_type_id`, `image`.`batch_id`, `image`.`is_start`, `image`.`is_completed`, `image`.`created_by` FROM `gpap`.`image` WHERE `image`.`batch_id` = 2
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'pull_reason' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] DESCRIBE `gpap`.`pull_reason`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT `pull_reason`.`id`, `pull_reason`.`title`, `pull_reason`.`reason`, `pull_reason`.`level` FROM `gpap`.`pull_reason` WHERE `pull_reason`.`level` = 'Batch'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'pull_reason' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] DESCRIBE `gpap`.`pull_reason`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT `pull_reason`.`id`, `pull_reason`.`title`, `pull_reason`.`reason`, `pull_reason`.`level` FROM `gpap`.`pull_reason` WHERE `pull_reason`.`level` = 'Slip'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'installment_months' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] DESCRIBE `gpap`.`installment_months`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT `installment_months`.`id`, `installment_months`.`title` FROM `gpap`.`installment_months`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'other_exception' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] DESCRIBE `gpap`.`other_exception`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT `other_exception`.`id`, `other_exception`.`title` FROM `gpap`.`other_exception`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'merchant_header' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] DESCRIBE `gpap`.`merchant_header`
[Fri, 13 Apr 18 07:02:13 +0000][DEBUG] SELECT `merchant_header`.`id`, `merchant_header`.`data_entry_id`, `merchant_header`.`batch_id`, `merchant_header`.`merchant_number`, `merchant_header`.`merchant_name`, `merchant_header`.`currency_id`, `merchant_header`.`other_currency`, `merchant_header`.`dcn`, `merchant_header`.`deposit_date`, `merchant_header`.`deposit_amount`, `merchant_header`.`batch_pull_reason_id` FROM `gpap`.`merchant_header` WHERE `merchant_header`.`data_entry_id` = 4 AND `merchant_header`.`batch_id` = 2 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 07:04:07 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 07:40:37 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER('test'), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER('test')), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER('test')),LOWER(dictionaryWord)) > 0 OR INSTR(LOWER('test'), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 07:41:57 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?1), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?2)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?3)),LOWER(dictionaryWord)) > 0 OR INSTR(LOWER(?4), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 08:17:16 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:16 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 08:17:16 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 08:17:18 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 08:17:19 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 08:17:19 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 08:17:19 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 09:18:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:47 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 09:18:47 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:18:51 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 09:19:54 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?1), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?2)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?3)),LOWER(dictionaryWord)) > 0 OR INSTR(LOWER(?4), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:21:30 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER('test'), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER('test')), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER('test')),LOWER(dictionaryWord)) > 0 OR INSTR(LOWER('test'), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:22:20 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:22:34 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:23:09 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:23:13 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:23:18 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:24:46 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:24:53 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:25:08 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:25:46 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:26:17 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:26:21 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:26:26 +0000][DEBUG] SELECT dictionary.* FROM dictionary WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 09:38:48 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:48 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 09:38:48 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:50 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:38:51 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 09:43:57 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:43:57 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 09:43:57 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 09:43:59 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:44:01 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 09:44:21 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:44:38 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:44:47 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:44:52 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:45:01 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:46:36 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:36 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 09:46:36 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:38 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 09:46:39 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 09:47:08 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:55:42 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:55:42 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'dictionary' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:55:42 +0000][DEBUG] DESCRIBE `gpap`.`dictionary`
[Fri, 13 Apr 18 09:55:50 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 09:55:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'dictionary' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:55:50 +0000][DEBUG] DESCRIBE `gpap`.`dictionary`
[Fri, 13 Apr 18 09:56:26 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 09:56:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:56:26 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 09:57:05 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 09:57:05 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 09:57:05 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 10:09:36 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:36 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:09:36 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:38 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:09:39 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 10:15:12 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:12 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:15:12 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:14 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:15:15 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 10:17:08 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:17:08 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:17:08 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:17:08 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:17:08 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:17:08 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:18:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:18:10 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:18:10 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:40 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:39:40 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:47 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:39:47 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:49 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:39:50 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 10:47:37 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:37 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:47:37 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:47:40 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 10:51:46 +0000][DEBUG] SELECT POSITION(dictionaryWord IN '?') AS m FROM Dictionary HAVING m = 1
[Fri, 13 Apr 18 10:52:03 +0000][DEBUG] SELECT POSITION(dictionaryWord IN '?') AS m FROM Dictionary HAVING m = 1
[Fri, 13 Apr 18 10:53:56 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:56 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 10:53:56 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 10:53:59 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 11:52:25 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 11:52:25 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 11:52:25 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 11:52:26 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 11:52:26 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 11:52:26 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 12:10:38 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:10:38 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:10:38 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 12:10:41 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:10:41 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:10:41 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 12:12:33 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:12:33 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:12:33 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 12:12:36 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:12:36 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:12:36 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 12:14:30 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:14:30 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:14:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:14:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:01 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:15:01 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:15:01 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 12:15:01 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:15:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:05 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:17:48 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:17:49 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:17:49 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:19:23 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:19:24 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 12:19:24 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 12:19:24 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 12:19:24 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 13:56:10 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 13:56:10 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:56:10 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 13:57:42 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:42 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 13:57:42 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE `user`.`userName` = :0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`user_task`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `user_task`.`id`, `user_task`.`user_id`, `user_task`.`task_id` FROM `gpap`.`user_task` WHERE `user_task`.`user_id` = 2
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'task' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`task`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `task`.`id`, `task`.`name`, `task`.`description` FROM `gpap`.`task` WHERE `task`.`id` = 4 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'data_entry' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`data_entry`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `data_entry`.`id`, `data_entry`.`user_id`, `data_entry`.`batch_id`, `data_entry`.`task_id`, `data_entry`.`started_at`, `data_entry`.`ended_at` FROM `gpap`.`data_entry` WHERE `data_entry`.`user_id` = 2 AND `data_entry`.`task_id` = 4 AND `data_entry`.`ended_at`  IS NULL ORDER BY `data_entry`.`started_at` DESC
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `batch`.`id`, `batch`.`zip_id`, `batch`.`trans_type_id`, `batch`.`entry_status`, `batch`.`verify_status`, `batch`.`balance_status`, `batch`.`is_exception`, `batch`.`created_by` FROM `gpap`.`batch` WHERE `batch`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'zip' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`zip`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `zip`.`id`, `zip`.`region_code`, `zip`.`rec_date`, `zip`.`operator_id`, `zip`.`sequence`, `zip`.`created_by` FROM `gpap`.`zip` WHERE `zip`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'region' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`region`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `region`.`code`, `region`.`num_code`, `region`.`name`, `region`.`created_by`, `region`.`regioncol` FROM `gpap`.`region` WHERE `region`.`code` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'transaction_type' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] DESCRIBE `gpap`.`transaction_type`
[Fri, 13 Apr 18 13:57:45 +0000][DEBUG] SELECT `transaction_type`.`id`, `transaction_type`.`type`, `transaction_type`.`description`, `transaction_type`.`created_by` FROM `gpap`.`transaction_type` WHERE `transaction_type`.`id` = :APR0 LIMIT :APL0
[Fri, 13 Apr 18 13:57:46 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'batch' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 13:57:46 +0000][DEBUG] DESCRIBE `gpap`.`batch`
[Fri, 13 Apr 18 13:57:46 +0000][DEBUG] SELECT COUNT(*) AS `rowcount` FROM `gpap`.`batch` WHERE `batch`.`entry_status`  IS NULL
[Fri, 13 Apr 18 14:01:21 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:02:12 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:02:12 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user_prev_password' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:02:12 +0000][DEBUG] DESCRIBE `gpap`.`user_prev_password`
[Fri, 13 Apr 18 14:02:25 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:03:41 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:03:52 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:05:53 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:06:44 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:09:04 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:14:31 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:14:52 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:15:36 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:16:46 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:17:02 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:18:11 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:18:24 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:18:28 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:18:48 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:20:21 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:21:20 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:21:33 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:21:34 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:22:04 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:05 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:22:29 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:22:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:58 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:22:59 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:59 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:22:59 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:22:59 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:24 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:24 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:24 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:24 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:25 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:28 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:29 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:30 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:31 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:31 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:31 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:39 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:40 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:41 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:42 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:43 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:43 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:43 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:46 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:47 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:47 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:47 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:23:47 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:47 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:47 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:59 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:23:59 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:23:59 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:23:59 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:23:59 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:23:59 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:02 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:03 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:04 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:06 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:06 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:06 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:06 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:07 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:07 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:07 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:08 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:14 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT IF(COUNT(*) > 0, 1, 0) FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_NAME`= 'user' AND `TABLE_SCHEMA` = 'gpap'
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] DESCRIBE `gpap`.`user`
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT `user`.`userID`, `user`.`userName`, `user`.`userLastName`, `user`.`userFirstName`, `user`.`userPassword`, `user`.`userLastLogin`, `user`.`userInvalidLoginAttempt`, `user`.`userLastPasswordChange`, `user`.`createStatus`, `user`.`createdBy` FROM `gpap`.`user` WHERE DATEDIFF(now(), `user`.`userLastPasswordChange`) = 0 AND `user`.`userID` = :1
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:57 +0000][DEBUG] SELECT DISTINCT userPassword, userID FROM user_prev_password WHERE userID = ? AND userprevpasswordChange BETWEEN DATE_ADD(CURRENT_TIMESTAMP(), INTERVAL -6 MONTH) AND CURRENT_TIMESTAMP() UNION SELECT DISTINCT userPassword, userid FROM user WHERE userID = ?
[Fri, 13 Apr 18 14:24:58 +0000][DEBUG] SELECT dictionary.* 
                FROM dictionary 
                WHERE isCommon = true AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord))) > 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord)) > 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord))) > 0
[Fri, 13 Apr 18 14:24:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
[Fri, 13 Apr 18 14:24:58 +0000][DEBUG] SELECT count(dictionaryid) 
                FROM dictionary 
                WHERE isCommon = false 
                AND (INSTR(BINARY LOWER(?), LOWER(dictionaryWord))) > 0
                OR INSTR(REVERSE(BINARY LOWER(?)), REVERSE(LOWER(dictionaryWord)))> 0 
                OR INSTR(REVERSE(BINARY LOWER(?)),LOWER(dictionaryWord))> 0 
                OR INSTR(LOWER(?), REVERSE(LOWER(dictionaryWord)))> 0;
